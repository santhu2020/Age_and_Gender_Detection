# -*- coding: utf-8 -*-
"""Age_and_Gender_Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12IKTaOZf-yZHlc1d-l6pKG0YL_9ip4oz
"""

print("This is a project to find age and gender")

from google.colab import drive
drive.mount('/content/drive')

import cv2 as cv
from google.colab.patches import cv2_imshow
import dlib
import numpy as np

img=cv.imread('/content/drive/MyDrive/Colab Notebooks/gad/shah.jpg')
img=cv.resize(img,(720,640))
cv2_imshow(img)

Dup=img.copy()

face1 = "/content/drive/MyDrive/Colab Notebooks/gad/opencv_face_detector.pbtxt"
face2 = "/content/drive/MyDrive/Colab Notebooks/gad/opencv_face_detector_uint8.pb"
net_face = cv.dnn.readNet(face2, face1)

weights_age="/content/drive/MyDrive/Colab Notebooks/gad/age_deploy.prototxt"
config_age="/content/drive/MyDrive/Colab Notebooks/gad/age_net.caffemodel"
net_age= cv.dnn.readNet(config_age,weights_age)

weights_gender="/content/drive/MyDrive/Colab Notebooks/gad/gender_deploy.prototxt"
config_gender="/content/drive/MyDrive/Colab Notebooks/gad/gender_net.caffemodel"
net_gender=cv.dnn.readNet(config_gender,weights_gender)

age_range=['(0-2)', '(4-6)', '(8-12)', '(15-20)',
           '(25-32)', '(38-43)', '(48-53)', '(60-100)']
model_mean=(78.4263377603, 87.7689143744, 114.895847746)

gender=['Male','Female']

Dup_height=img.shape[0]
Dup_width=img.shape[1]
prepro=cv.dnn.blobFromImage(Dup,1.0,(227,227),model_mean,swapRB=False)
net_face.setInput(prepro)
detections = net_face.forward()

boxes=[]
ans='Face Detected'



faceboxes = []
for i in range(detections.shape[2]):
    confidence = detections[0, 0, i, 2]
    if confidence > 0.7:

        x1 = int(detections[0, 0, i, 3]*Dup_width)
        y1 = int(detections[0, 0, i, 4]*Dup_height)
        x2 = int(detections[0, 0, i, 5]*Dup_width)
        y2 = int(detections[0, 0, i, 6]*Dup_height)

        faceboxes.append([x1, y1, x2, y2])

        cv.rectangle(Dup, (x1, y1), (x2, y2),
                      (0, 255, 0), int(round(Dup_height/150)), 8)

if not faceboxes:
  print("No faces detected !!!")
else:
    for box in faceboxes:
      face = Dup[max(0, box[1]-15):
                 min(box[3]+15, Dup.shape[0]-1),
                 max(0, box[0]-15):min(box[2]+15,
                               Dup.shape[1]-1)]

      prepro=cv.dnn.blobFromImage(face,1.0,(227,227),model_mean,swapRB=False)

      net_age.setInput(prepro)
      Predicted_age=net_age.forward()
      age=age_range[Predicted_age[0].argmax()]

      net_gender.setInput(prepro)
      Predicted_gender=net_gender.forward()
      gen=gender[Predicted_gender[0].argmax()]
      cv.putText(Dup,f'{ans}:{age}:{gen}',(box[0],box[1]-10),cv.FONT_ITALIC,0.35,(0,255,255),1,cv.LINE_AA)

      cv2_imshow(Dup)
      cv.waitKey(0)

